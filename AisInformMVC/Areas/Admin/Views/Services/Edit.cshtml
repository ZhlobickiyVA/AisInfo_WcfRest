@model LibraryService.KhowBase.Service
  

@{
  ViewBag.Title = "Редактирование услуги";
  HtmlHelper.ClientValidationEnabled = false;
  
}

<div class="panel">
    <div class="panel-heading">
        <h3>Редактирование услуги</h3>
    </div>
        @using (Html.BeginForm("Edit", "Services"))
        {
        <div class="panel-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SlName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SlName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SlName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Frgu, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Frgu, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Frgu, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>

            <script>
                // Replace the <textarea id="editor1"> with a CKEditor
                // instance, using default configuration.
                CKEDITOR.replace( 'Text' );
            </script>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AuthorityId, "AuthorityId", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("AuthorityId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorityId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.CheckBoxFor(model => model.FlPeople, false)
                <span>@Html.DisplayNameFor(model=> model.FlPeople)</span>    
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(model => model.UnPeople, false)
                <span>@Html.DisplayNameFor(model => model.UnPeople)</span>
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(model => model.IpPeople, false)
                <span>@Html.DisplayNameFor(model => model.IpPeople)</span>
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(model => model.PerentPeople, false)
                <span>@Html.DisplayNameFor(model => model.PerentPeople)</span>
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(model => model.InAis, false)
                <span>@Html.DisplayNameFor(model => model.InAis)</span>
            </div>

        </div>
        <div class="panel-footer">
            <input type="submit" value="Сохранить" class="btn btn-primary" />
            @Html.ActionLink("Отменить", "Index", null, new { @class = "btn btn-default" })
        </div>

        }


    </div>

