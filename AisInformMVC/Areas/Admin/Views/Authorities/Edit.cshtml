@model LibraryService.KhowBase.Authority

@{
  ViewBag.Title = "Редактирование органа власти";

  HtmlHelper.ClientValidationEnabled = false;
  HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
  
}

<div class="panel">
    <div class="panel-heading">
        <h3>@ViewBag.Head</h3>
    </div>

    @using (Html.BeginForm("Edit", "Authorities", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
    <div class="panel-body">
        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SlName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.SlName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SlName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Frgu, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Frgu, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Frgu, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ogrn, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Ogrn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ogrn, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inn, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Inn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Inn, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FIOruk, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FIOruk, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FIOruk, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Map, htmlAttributes: new { @class = "control-label" })
            @Html.TextBox("Map", null, new { @class = "form-control", type = "file" })
        </div>*@

            <div class="form-group">
                <label class="control-label">Вид органа власти</label>
                    @Html.DropDownList("ViewAuthorityId", ViewBag.ViewAuthorityList as SelectList,new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ViewAuthorityId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Вид территориальной принадлежности</label>
                @Html.DropDownList("TerritoryId", ViewBag.TerritoryList as SelectList, new { @class = "form-control" })    
                @Html.ValidationMessageFor(model => model.TerritoryId, "", new { @class = "text-danger" })
            </div>
                
        <div class="form-group">
            
            @if (Model.Map == null)
            {
            <div class="form-control-static">Нет картинки</div>
            }
            else
            {
            <img class="img-thumbnail" width="300" height="300"
                 src="@Url.Action("GetImage", "Authorities",
                        new { Model.Id })" />
             
            }
            <div style="position:relative;">
                <label>Карта</label>
                <a class='btn btn-info' href='javascript:;'>
                    Выберите файл...
                    <input type="file" name="File" id="File" size="40"
                           style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val());'>
                </a>
                <span class='label label-info' id="upload-file-info"></span>
            </div>
        </div>

        @*<input type="text" id="TerritoryId" name="TerritoryId" value="1" />
        <input type="text" id="ViewAuthorityId" name="ViewAuthorityId" value="1" />*@
       
    </div>
    <div class="panel-footer">
        <input type="submit" value="Сохранить" class="btn btn-primary" />
        @Html.ActionLink("Отменить", "Index", null, new { @class = "btn btn-default" })
    </div>
    }

</div>